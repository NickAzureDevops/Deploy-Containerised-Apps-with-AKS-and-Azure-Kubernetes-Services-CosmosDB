trigger: none

variables: 
  serviceConnectionName: SP
  backendAzureRmResourceGroupName: rg-tfstate
  backendAzureRmStorageAccountName: saterraformdevops
  backendAzureRmContainerName: devtfstate
  backendAzureRmKey: Festive-Tech-Calender-2022-dev.tfstate
  checkovScanDirectory: "$(System.DefaultWorkingDirectory)/3-Infrastructure-Deployment/terraform/src"
  workingDirectory: "$(System.DefaultWorkingDirectory)/3-Infrastructure-Deployment/terraform/environments/dev"

pool:
  vmImage: ubuntu-latest

jobs:
  - job: Checks
    displayName: Pull Request
    steps:
      - task: TerraformInstaller@0
        displayName: "Install Terraform [latest]"
        inputs:
          terraformVersion: "latest"
      - task: TerraformTaskV2@2
        displayName: "Terraform Init"
        inputs:
          provider: "azurerm"
          command: "init"
          workingDirectory: "${{ variables.workingDirectory }}"
          backendServiceArm: "${{ variables.serviceConnectionName}}"
          backendAzureRmResourceGroupName: "${{ variables.backendAzureRmResourceGroupName }}"
          backendAzureRmStorageAccountName: "${{ variables.backendAzureRmStorageAccountName }}"
          backendAzureRmContainerName: "${{ variables.backendAzureRmContainerName }}"
          backendAzureRmKey: "${{ variables.backendAzureRmKey }}"
      - task: TerraformTaskV2@2
        displayName: "Terraform Plan"
        inputs:
          provider: "azurerm"
          command: "plan"
          workingDirectory: "${{ variables.workingDirectory }}"
          environmentServiceNameAzureRM: "${{ variables.serviceConnectionName }}"

  - job: "runCheckov"
    displayName: "Checkov > Pull, run and publish results of Checkov scan"
    dependsOn: Checks
    steps:
      - bash: |
              docker pull bridgecrew/checkov
        workingDirectory: $(checkovScanDirectory)
        displayName: "Pull > bridgecrew/checkov"
      - bash: |
          docker run \
            --volume $(checkovScanDirectory):/tf bridgecrew/checkov \
            --directory /tf \
            --output junitxml \
            --soft-fail > $(checkovScanDirectory)/CheckovReport.xml              
        workingDirectory: $(checkovScanDirectory)
        displayName: "Run > checkov"
      - task: PublishTestResults@2
        inputs:
          testRunTitle: "Checkov Results"
          failTaskOnFailedTests: true
          testResultsFormat: "JUnit"
          testResultsFiles: "CheckovReport.xml"
          searchFolder: "$(checkovScanDirectory)"
        displayName: "Publish > Checkov scan results"