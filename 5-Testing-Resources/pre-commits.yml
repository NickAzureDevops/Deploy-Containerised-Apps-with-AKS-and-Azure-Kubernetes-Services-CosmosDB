trigger:
  branches:
    include: [main]

variables: 
  ruby: '>= 2.4'
  python: '3.11' 
  serviceConnectionName: SP
  backendAzureRmResourceGroupName: rg-tfstate
  backendAzureRmStorageAccountName: saterraformdevops
  backendAzureRmContainerName: devtfstate
  backendAzureRmKey: Festive-Tech-Calender-2022-dev.tfstate
  workingDirectory: "$(System.DefaultWorkingDirectory)/3-Infrastructure-Deployment/terraform/environments/dev"

pool:
  vmImage: macOS-12	

jobs:
  - job: Checks
    displayName: Pull Request
    steps:
      - task: TerraformInstaller@0
        displayName: "Install Terraform [latest]"
        inputs:
          terraformVersion: "latest"
      - task: TerraformTaskV2@2
        displayName: "Terraform Init"
        inputs:
          provider: "azurerm"
          command: "init"
          workingDirectory: "${{ variables.workingDirectory }}"
          backendServiceArm: "${{ variables.serviceConnectionName}}"
          backendAzureRmResourceGroupName: "${{ variables.backendAzureRmResourceGroupName }}"
          backendAzureRmStorageAccountName: "${{ variables.backendAzureRmStorageAccountName }}"
          backendAzureRmContainerName: "${{ variables.backendAzureRmContainerName }}"
          backendAzureRmKey: "${{ variables.backendAzureRmKey }}"
      - task: TerraformTaskV2@2
        displayName: "Terraform Plan"
        inputs:
          provider: "azurerm"
          command: "plan"
          workingDirectory: "${{ variables.workingDirectory }}"
          environmentServiceNameAzureRM: "${{ variables.serviceConnectionName }}"

  - job: macOS
    steps:
      - bash: |
          set -e
          brew tap liamg/tfsec
          brew install terraform-docs tflint tfsec checkov
          brew install pre-commit gawk coreutils

      - task: CacheBeta@0
        inputs:
          key: pre-commit | "4" | .pre-commit-config.yaml | "$(PY)" | "$(RB)"
          path: $(PRE_COMMIT_HOME)

      - script: pre-commit run -a
        displayName: run pre-commit